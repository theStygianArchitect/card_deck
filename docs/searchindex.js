Search.setIndex({"alltitles": {"All others checklist": [[0, "all-others-checklist"]], "Automating all the checks": [[1, "automating-all-the-checks"]], "Automating documentation build": [[1, "automating-documentation-build"]], "Checklist:": [[0, "checklist"]], "Code Quality": [[1, null]], "Code linting": [[1, "code-linting"]], "Contributing to Deck of Cards": [[0, null]], "Deck of Cards documentation": [[6, null]], "Dependency vulnerability checking with pip-audit": [[1, "dependency-vulnerability-checking-with-pip-audit"]], "Documentation checklist": [[0, "documentation-checklist"]], "Documentation update": [[0, "documentation-update"]], "Get the Source Code": [[7, "get-the-source-code"]], "How Has This Been Tested?": [[0, "how-has-this-been-tested"]], "Install Deck of Cards via pip": [[7, "install-deck-of-cards-via-pip"]], "Install Deck of Cards via pipenv": [[7, "install-deck-of-cards-via-pipenv"]], "Install Deck of Cards via poetry": [[7, "install-deck-of-cards-via-poetry"]], "Install Deck of Cards via uv": [[7, "install-deck-of-cards-via-uv"]], "Installation of Deck of Cards": [[7, null]], "Library support strategy": [[2, "library-support-strategy"]], "Module contents": [[3, "module-card_deck"], [5, "module-tests"]], "Open a pull request": [[0, "open-a-pull-request"]], "Pep008 checking with pycodestyle": [[1, "pep008-checking-with-pycodestyle"]], "Pep257 checking with pydocstyle": [[1, "pep257-checking-with-pydocstyle"]], "Pep484 type hinting with mypy": [[1, "pep484-type-hinting-with-mypy"]], "Propose a feature": [[0, "propose-a-feature"]], "Reaching out for support": [[2, "reaching-out-for-support"]], "Report a bug": [[0, "report-a-bug"]], "Screenshots (if appropriate):": [[0, "screenshots-if-appropriate"]], "Static analysis checking with bandit": [[1, "static-analysis-checking-with-bandit"]], "Submodules": [[3, "submodules"], [5, "submodules"]], "Support": [[2, null]], "Testing": [[1, "testing"]], "The API Documentation / Guide": [[6, "the-api-documentation-guide"]], "The Community Guide": [[6, "the-community-guide"]], "The User Guide": [[6, "the-user-guide"]], "Types of changes": [[0, "types-of-changes"]], "card_deck": [[4, null]], "card_deck package": [[3, null]], "card_deck.card module": [[3, "module-card_deck.card"]], "card_deck.exceptions module": [[3, "module-card_deck.exceptions"]], "tests package": [[5, null]], "tests.test_card module": [[5, "module-tests.test_card"]]}, "docurls": ["community/contributing.html", "community/quality.html", "community/support.html", "dev/card_deck.html", "dev/modules.html", "dev/tests.html", "index.html", "user/install.html"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "indexentries": {"_rank (card_deck.card attribute)": [[3, "card_deck.Card._rank", false]], "_rank (card_deck.card.card attribute)": [[3, "card_deck.card.Card._rank", false]], "_suite (card_deck.card attribute)": [[3, "card_deck.Card._suite", false]], "_suite (card_deck.card.card attribute)": [[3, "card_deck.card.Card._suite", false]], "ace (card_deck.card.rank attribute)": [[3, "card_deck.card.Rank.ACE", false], [3, "id0", false]], "ace (card_deck.rank attribute)": [[3, "card_deck.Rank.ACE", false], [3, "id8", false]], "card (class in card_deck)": [[3, "card_deck.Card", false]], "card (class in card_deck.card)": [[3, "card_deck.card.Card", false]], "card_deck": [[3, "module-card_deck", false]], "card_deck.card": [[3, "module-card_deck.card", false]], "card_deck.exceptions": [[3, "module-card_deck.exceptions", false]], "carddeckattributeerror": [[3, "card_deck.exceptions.CardDeckAttributeError", false]], "carddeckexception": [[3, "card_deck.exceptions.CardDeckException", false]], "carddecktypeerror": [[3, "card_deck.exceptions.CardDeckTypeError", false]], "carddeckvalueerror": [[3, "card_deck.exceptions.CardDeckValueError", false]], "clubs (card_deck.card.suite attribute)": [[3, "card_deck.card.Suite.CLUBS", false], [3, "id4", false]], "clubs (card_deck.suite attribute)": [[3, "card_deck.Suite.CLUBS", false], [3, "id12", false]], "diamonds (card_deck.card.suite attribute)": [[3, "card_deck.card.Suite.DIAMONDS", false], [3, "id5", false]], "diamonds (card_deck.suite attribute)": [[3, "card_deck.Suite.DIAMONDS", false], [3, "id13", false]], "eight (card_deck.card.rank attribute)": [[3, "card_deck.card.Rank.EIGHT", false]], "eight (card_deck.rank attribute)": [[3, "card_deck.Rank.EIGHT", false]], "five (card_deck.card.rank attribute)": [[3, "card_deck.card.Rank.FIVE", false]], "five (card_deck.rank attribute)": [[3, "card_deck.Rank.FIVE", false]], "four (card_deck.card.rank attribute)": [[3, "card_deck.card.Rank.FOUR", false]], "four (card_deck.rank attribute)": [[3, "card_deck.Rank.FOUR", false]], "hearts (card_deck.card.suite attribute)": [[3, "card_deck.card.Suite.HEARTS", false], [3, "id6", false]], "hearts (card_deck.suite attribute)": [[3, "card_deck.Suite.HEARTS", false], [3, "id14", false]], "invalidcard": [[3, "card_deck.exceptions.InvalidCard", false]], "invalidcardattribute": [[3, "card_deck.exceptions.InvalidCardAttribute", false]], "invalidcardrank": [[3, "card_deck.exceptions.InvalidCardRank", false]], "invalidcardsuite": [[3, "card_deck.exceptions.InvalidCardSuite", false]], "invaliddeck": [[3, "card_deck.exceptions.InvalidDeck", false]], "jack (card_deck.card.rank attribute)": [[3, "card_deck.card.Rank.JACK", false], [3, "id1", false]], "jack (card_deck.rank attribute)": [[3, "card_deck.Rank.JACK", false], [3, "id9", false]], "king (card_deck.card.rank attribute)": [[3, "card_deck.card.Rank.KING", false], [3, "id2", false]], "king (card_deck.rank attribute)": [[3, "card_deck.Rank.KING", false], [3, "id10", false]], "module": [[3, "module-card_deck", false], [3, "module-card_deck.card", false], [3, "module-card_deck.exceptions", false], [5, "module-tests", false], [5, "module-tests.test_card", false]], "nine (card_deck.card.rank attribute)": [[3, "card_deck.card.Rank.NINE", false]], "nine (card_deck.rank attribute)": [[3, "card_deck.Rank.NINE", false]], "queen (card_deck.card.rank attribute)": [[3, "card_deck.card.Rank.QUEEN", false], [3, "id3", false]], "queen (card_deck.rank attribute)": [[3, "card_deck.Rank.QUEEN", false], [3, "id11", false]], "rank (card_deck.card property)": [[3, "card_deck.Card.rank", false]], "rank (card_deck.card.card property)": [[3, "card_deck.card.Card.rank", false]], "rank (class in card_deck)": [[3, "card_deck.Rank", false]], "rank (class in card_deck.card)": [[3, "card_deck.card.Rank", false]], "seven (card_deck.card.rank attribute)": [[3, "card_deck.card.Rank.SEVEN", false]], "seven (card_deck.rank attribute)": [[3, "card_deck.Rank.SEVEN", false]], "six (card_deck.card.rank attribute)": [[3, "card_deck.card.Rank.SIX", false]], "six (card_deck.rank attribute)": [[3, "card_deck.Rank.SIX", false]], "spades (card_deck.card.suite attribute)": [[3, "card_deck.card.Suite.SPADES", false], [3, "id7", false]], "spades (card_deck.suite attribute)": [[3, "card_deck.Suite.SPADES", false], [3, "id15", false]], "suite (card_deck.card property)": [[3, "card_deck.Card.suite", false]], "suite (card_deck.card.card property)": [[3, "card_deck.card.Card.suite", false]], "suite (class in card_deck)": [[3, "card_deck.Suite", false]], "suite (class in card_deck.card)": [[3, "card_deck.card.Suite", false]], "ten (card_deck.card.rank attribute)": [[3, "card_deck.card.Rank.TEN", false]], "ten (card_deck.rank attribute)": [[3, "card_deck.Rank.TEN", false]], "test_card_initialization() (in module tests.test_card)": [[5, "tests.test_card.test_card_initialization", false]], "test_del_rank() (in module tests.test_card)": [[5, "tests.test_card.test_del_rank", false]], "test_del_suite() (in module tests.test_card)": [[5, "tests.test_card.test_del_suite", false]], "test_get_rank() (in module tests.test_card)": [[5, "tests.test_card.test_get_rank", false]], "test_get_suite() (in module tests.test_card)": [[5, "tests.test_card.test_get_suite", false]], "test_invalid_card_initialization_rank() (in module tests.test_card)": [[5, "tests.test_card.test_invalid_card_initialization_rank", false]], "test_invalid_card_initialization_suite() (in module tests.test_card)": [[5, "tests.test_card.test_invalid_card_initialization_suite", false]], "test_set_rank_invalid() (in module tests.test_card)": [[5, "tests.test_card.test_set_rank_invalid", false]], "test_set_rank_valid() (in module tests.test_card)": [[5, "tests.test_card.test_set_rank_valid", false]], "test_set_suite_invalid() (in module tests.test_card)": [[5, "tests.test_card.test_set_suite_invalid", false]], "test_set_suite_valid() (in module tests.test_card)": [[5, "tests.test_card.test_set_suite_valid", false]], "tests": [[5, "module-tests", false]], "tests.test_card": [[5, "module-tests.test_card", false]], "three (card_deck.card.rank attribute)": [[3, "card_deck.card.Rank.THREE", false]], "three (card_deck.rank attribute)": [[3, "card_deck.Rank.THREE", false]], "two (card_deck.card.rank attribute)": [[3, "card_deck.card.Rank.TWO", false]], "two (card_deck.rank attribute)": [[3, "card_deck.Rank.TWO", false]]}, "objects": {"": [[3, 0, 0, 1, "card_deck", ""], [5, 0, 0, 1, "tests", ""]], "card_deck": [[3, 1, 1, 0, "Card", "Bases: object"], [3, 1, 1, 0, "Rank", "Bases: Enum"], [3, 1, 1, 0, "Suite", "Bases: Enum"], [3, 0, 0, 1, "card", ""], [3, 0, 0, 1, "exceptions", ""]], "card_deck.Card": [[3, 3, 1, 0, "_rank", "The rank of the card_deck (Ace, 2-10, Jack, Queen, King)."], [3, 3, 1, 0, "_suite", "The suite of the card_deck (Clubs, Diamonds, Hearts, Spades)."], [3, 4, 1, 0, "rank", "Get the rank of the card_deck."], [3, 4, 1, 0, "suite", "Get the suite of the card_deck."]], "card_deck.Card.__init__": [[3, 2, 2, "card_deck.Card", "rank", "Bases: object"], [3, 2, 2, "card_deck.Card", "suite", "Bases: object"]], "card_deck.Rank": [[3, 3, 1, "id8", "ACE", "Represents the Ace rank with a value of 1."], [3, 3, 1, 0, "EIGHT", ""], [3, 3, 1, 0, "FIVE", ""], [3, 3, 1, 0, "FOUR", ""], [3, 3, 1, "id9", "JACK", "Represents the Jack rank with a value of 11."], [3, 3, 1, "id10", "KING", "Represents the King rank with a value of 13."], [3, 3, 1, 0, "NINE", ""], [3, 3, 1, "id11", "QUEEN", "Represents the Queen rank with a value of 12."], [3, 3, 1, 0, "SEVEN", ""], [3, 3, 1, 0, "SIX", ""], [3, 3, 1, 0, "TEN", ""], [3, 3, 1, 0, "THREE", ""], [3, 3, 1, 0, "TWO", ""]], "card_deck.Rank.__init__": [[3, 2, 2, "card_deck.Rank", "*values", "Bases: Enum"], [3, 2, 2, "card_deck.Rank", "boundary=None", "Bases: Enum"], [3, 2, 2, "card_deck.Rank", "module=None", "Bases: Enum"], [3, 2, 2, "card_deck.Rank", "names=&lt;not given&gt;", "Bases: Enum"], [3, 2, 2, "card_deck.Rank", "qualname=None", "Bases: Enum"], [3, 2, 2, "card_deck.Rank", "start=1", "Bases: Enum"], [3, 2, 2, "card_deck.Rank", "type=None", "Bases: Enum"], [3, 2, 2, "card_deck.Rank", "value", "Bases: Enum"]], "card_deck.Suite": [[3, 3, 1, "id12", "CLUBS", "Represents the Clubs suit."], [3, 3, 1, "id13", "DIAMONDS", "Represents the Diamonds suit."], [3, 3, 1, "id14", "HEARTS", "Represents the Hearts suit."], [3, 3, 1, "id15", "SPADES", "Represents the Spades suit."]], "card_deck.Suite.__init__": [[3, 2, 2, "card_deck.Suite", "*values", "Bases: Enum"], [3, 2, 2, "card_deck.Suite", "boundary=None", "Bases: Enum"], [3, 2, 2, "card_deck.Suite", "module=None", "Bases: Enum"], [3, 2, 2, "card_deck.Suite", "names=&lt;not given&gt;", "Bases: Enum"], [3, 2, 2, "card_deck.Suite", "qualname=None", "Bases: Enum"], [3, 2, 2, "card_deck.Suite", "start=1", "Bases: Enum"], [3, 2, 2, "card_deck.Suite", "type=None", "Bases: Enum"], [3, 2, 2, "card_deck.Suite", "value", "Bases: Enum"]], "card_deck.card": [[3, 1, 1, 0, "Card", "Bases: object"], [3, 1, 1, 0, "Rank", "Bases: Enum"], [3, 1, 1, 0, "Suite", "Bases: Enum"]], "card_deck.card.Card": [[3, 3, 1, 0, "_rank", "The rank of the card_deck (Ace, 2-10, Jack, Queen, King)."], [3, 3, 1, 0, "_suite", "The suite of the card_deck (Clubs, Diamonds, Hearts, Spades)."], [3, 4, 1, 0, "rank", "Get the rank of the card_deck."], [3, 4, 1, 0, "suite", "Get the suite of the card_deck."]], "card_deck.card.Card.__init__": [[3, 2, 2, "card_deck.card.Card", "rank", "Bases: object"], [3, 2, 2, "card_deck.card.Card", "suite", "Bases: object"]], "card_deck.card.Rank": [[3, 3, 1, "id0", "ACE", "Represents the Ace rank with a value of 1."], [3, 3, 1, 0, "EIGHT", ""], [3, 3, 1, 0, "FIVE", ""], [3, 3, 1, 0, "FOUR", ""], [3, 3, 1, "id1", "JACK", "Represents the Jack rank with a value of 11."], [3, 3, 1, "id2", "KING", "Represents the King rank with a value of 13."], [3, 3, 1, 0, "NINE", ""], [3, 3, 1, "id3", "QUEEN", "Represents the Queen rank with a value of 12."], [3, 3, 1, 0, "SEVEN", ""], [3, 3, 1, 0, "SIX", ""], [3, 3, 1, 0, "TEN", ""], [3, 3, 1, 0, "THREE", ""], [3, 3, 1, 0, "TWO", ""]], "card_deck.card.Rank.__init__": [[3, 2, 2, "card_deck.card.Rank", "*values", "Bases: Enum"], [3, 2, 2, "card_deck.card.Rank", "boundary=None", "Bases: Enum"], [3, 2, 2, "card_deck.card.Rank", "module=None", "Bases: Enum"], [3, 2, 2, "card_deck.card.Rank", "names=&lt;not given&gt;", "Bases: Enum"], [3, 2, 2, "card_deck.card.Rank", "qualname=None", "Bases: Enum"], [3, 2, 2, "card_deck.card.Rank", "start=1", "Bases: Enum"], [3, 2, 2, "card_deck.card.Rank", "type=None", "Bases: Enum"], [3, 2, 2, "card_deck.card.Rank", "value", "Bases: Enum"]], "card_deck.card.Suite": [[3, 3, 1, "id4", "CLUBS", "Represents the Clubs suit."], [3, 3, 1, "id5", "DIAMONDS", "Represents the Diamonds suit."], [3, 3, 1, "id6", "HEARTS", "Represents the Hearts suit."], [3, 3, 1, "id7", "SPADES", "Represents the Spades suit."]], "card_deck.card.Suite.__init__": [[3, 2, 2, "card_deck.card.Suite", "*values", "Bases: Enum"], [3, 2, 2, "card_deck.card.Suite", "boundary=None", "Bases: Enum"], [3, 2, 2, "card_deck.card.Suite", "module=None", "Bases: Enum"], [3, 2, 2, "card_deck.card.Suite", "names=&lt;not given&gt;", "Bases: Enum"], [3, 2, 2, "card_deck.card.Suite", "qualname=None", "Bases: Enum"], [3, 2, 2, "card_deck.card.Suite", "start=1", "Bases: Enum"], [3, 2, 2, "card_deck.card.Suite", "type=None", "Bases: Enum"], [3, 2, 2, "card_deck.card.Suite", "value", "Bases: Enum"]], "card_deck.exceptions": [[3, 5, 1, 0, "CardDeckAttributeError", "Bases: AttributeError"], [3, 5, 1, 0, "CardDeckException", "Bases: Exception"], [3, 5, 1, 0, "CardDeckTypeError", "Bases: TypeError"], [3, 5, 1, 0, "CardDeckValueError", "Bases: ValueError"], [3, 5, 1, 0, "InvalidCard", "Bases: CardDeckException"], [3, 5, 1, 0, "InvalidCardAttribute", "Bases: CardDeckAttributeError"], [3, 5, 1, 0, "InvalidCardRank", "Bases: CardDeckValueError"], [3, 5, 1, 0, "InvalidCardSuite", "Bases: CardDeckTypeError"], [3, 5, 1, 0, "InvalidDeck", "Bases: CardDeckException"]], "tests": [[5, 0, 0, 1, "test_card", ""]], "tests.test_card": [[5, 6, 1, 0, "test_card_initialization", "Test the initialization of a Card object with valid suite and rank values."], [5, 6, 1, 0, "test_del_rank", "Test deleting the rank attribute of a Card object."], [5, 6, 1, 0, "test_del_suite", "Test deleting the suite attribute of a Card object."], [5, 6, 1, 0, "test_get_rank", "Test the get_rank method of the Card class."], [5, 6, 1, 0, "test_get_suite", "Test the get_suite method of the Card class."], [5, 6, 1, 0, "test_invalid_card_initialization_rank", "Test the initialization of a Card object with an invalid rank."], [5, 6, 1, 0, "test_invalid_card_initialization_suite", "Test the initialization of a Card object with an invalid suite."], [5, 6, 1, 0, "test_set_rank_invalid", "Test setting an invalid rank for a Card object using the set_rank method."], [5, 6, 1, 0, "test_set_rank_valid", "Test setting a valid rank for a Card object using the set_rank method."], [5, 6, 1, 0, "test_set_suite_invalid", "Test setting an invalid suite for a Card object using the set_suite method."], [5, 6, 1, 0, "test_set_suite_valid", "Test setting a valid suite for a Card object using the set_suite method."]], "tests.test_card.test_card_initialization": [[5, 2, 2, 0, "rank", "A valid rank from the Rank enum."], [5, 2, 2, 0, "suite", "A valid suite from the Suite enum."]], "tests.test_card.test_del_rank": [[5, 2, 2, 0, "rank", "A valid rank from the Rank enum."], [5, 2, 2, 0, "suite", "A valid suite from the Suite enum."]], "tests.test_card.test_del_suite": [[5, 2, 2, 0, "rank", "A valid rank from the Rank enum."], [5, 2, 2, 0, "suite", "A valid suite from the Suite enum."]], "tests.test_card.test_get_rank": [[5, 2, 2, 0, "rank", "A valid rank from the Rank enum."], [5, 2, 2, 0, "suite", "A valid suite from the Suite enum."]], "tests.test_card.test_get_suite": [[5, 2, 2, 0, "rank", "A valid rank from the Rank enum."], [5, 2, 2, 0, "suite", "A valid suite from the Suite enum."]], "tests.test_card.test_invalid_card_initialization_rank": [[5, 2, 2, 0, "suite", "A valid suite from the Suite enum."]], "tests.test_card.test_invalid_card_initialization_suite": [[5, 2, 2, 0, "rank", "A valid rank from the Rank enum."]], "tests.test_card.test_set_rank_invalid": [[5, 2, 2, 0, "rank", "A valid rank from the Rank enum."], [5, 2, 2, 0, "suite", "A valid suite from the Suite enum."]], "tests.test_card.test_set_rank_valid": [[5, 2, 2, 0, "rank", "A valid rank from the Rank enum."], [5, 2, 2, 0, "suite", "A valid suite from the Suite enum."]], "tests.test_card.test_set_suite_invalid": [[5, 2, 2, 0, "rank", "A valid rank from the Rank enum."], [5, 2, 2, 0, "suite", "A valid suite from the Suite enum."]], "tests.test_card.test_set_suite_valid": [[5, 2, 2, 0, "rank", "A valid rank from the Rank enum."], [5, 2, 2, 0, "suite", "A valid suite from the Suite enum."]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "parameter", "Python parameter"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "exception", "Python exception"], "6": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:parameter", "3": "py:attribute", "4": "py:property", "5": "py:exception", "6": "py:function"}, "terms": {"": [1, 2, 6], "1": 3, "10": 3, "11": 3, "12": 3, "13": 3, "2": 3, "3": 3, "4": 3, "5": 3, "6": 3, "7": 3, "8": 3, "9": 3, "A": [1, 3, 5], "As": 1, "For": 0, "If": 0, "It": [3, 5], "NOT": 1, "The": [0, 1, 3, 5, 7], "These": [0, 3], "To": [5, 7], "__init__": [3, 5], "_rank": [3, 4], "_suit": [3, 4], "about": [0, 6], "abov": [0, 1], "ac": [3, 4], "access": 3, "accordingli": 0, "act": 3, "activ": 7, "ad": 0, "adapt": 2, "add": [0, 7], "addit": 2, "address": 2, "affect": 0, "all": [3, 6], "allow": 2, "also": 2, "alwai": 7, "an": [0, 1, 2, 5], "analysi": 6, "ani": [0, 1, 7], "appli": 0, "ar": 0, "area": 0, "ask": 0, "assert": 5, "attempt": [1, 5], "attribut": [3, 5], "attributeerror": [3, 5], "audit": 6, "augment": 1, "autom": 6, "avail": 7, "bandit": 6, "base": [3, 6], "basi": 3, "been": 1, "befor": 0, "beginn": 0, "behavior": 5, "below": [3, 5], "best": 1, "boundari": 3, "box": 0, "branch": 0, "break": 0, "bug": [1, 2, 6], "build": 6, "can": [3, 7], "card": [1, 2, 4, 5], "card_deck": [5, 7], "carddeckattributeerror": [3, 4], "carddeckexcept": [3, 4], "carddecktypeerror": [3, 4], "carddeckvalueerror": [3, 4], "case": 5, "caus": 0, "cd": 1, "chang": 1, "check": 6, "checker": 1, "choic": 7, "class": [3, 5], "clone": 7, "close": 0, "club": [3, 4], "code": [0, 6], "com": 7, "command": [1, 7], "commit": 0, "common": 1, "commun": [0, 1, 2], "compon": [3, 5], "consist": 1, "contain": 5, "content": [0, 4], "contribut": 6, "convent": 1, "core": 3, "correctli": 5, "cover": 7, "creat": [0, 2, 3, 5, 6], "custom": [3, 5], "cycl": 2, "deck": [1, 2, 3], "defin": [3, 5], "definit": 3, "delet": 5, "depend": [2, 5, 6], "describ": 0, "descript": [0, 3, 5], "design": 1, "detail": [0, 6], "develop": [2, 7], "diamond": [3, 4], "differ": 3, "directori": 5, "discuss": 1, "doc": [0, 1], "doc_src": 1, "docstr": 1, "document": 7, "doe": 0, "don": 0, "driven": 0, "duplic": 0, "e": 7, "edg": 5, "eight": [3, 4], "enabl": [2, 3], "encount": 3, "encourag": [1, 2], "ensur": 5, "enterpris": 1, "enum": [3, 5], "enumer": 3, "environ": [0, 1], "error": 3, "especi": 0, "etc": 0, "everyon": 2, "everyth": 3, "evolv": 1, "except": [4, 5], "execut": [0, 5], "exist": 0, "expect": 0, "expedit": 2, "extrem": 1, "fast": 1, "featur": [2, 5, 6], "feel": 0, "file": 1, "find": [1, 3], "first": [0, 7], "fit": 2, "five": [3, 4], "fix": [0, 2], "flexibl": 2, "follow": [0, 1, 2], "form": 3, "format": 5, "formatt": 1, "found": 1, "four": [3, 4], "framework": 5, "free": 0, "from": [0, 1, 3, 5], "function": [0, 3, 5, 6], "get": [3, 5, 6], "get_rank": 5, "get_suit": 5, "git": 7, "github": [0, 1, 2, 7], "given": 3, "go": 0, "guidanc": 0, "guidelin": 0, "ha": 1, "handl": [3, 5], "have": 0, "heart": [3, 4], "help": [0, 1], "here": 0, "hesit": 0, "hint": 6, "how": 6, "http": 7, "i": [0, 1, 2, 5, 6, 7], "implement": 3, "import": 3, "includ": [0, 3], "individu": 3, "inform": 6, "initi": [3, 5], "input": [1, 5], "instal": 6, "internet": 1, "introduc": 0, "invalid": [3, 5], "invalidcard": [3, 4], "invalidcardattribut": [3, 4], "invalidcardrank": [3, 4, 5], "invalidcardsuit": [3, 4, 5], "invaliddeck": [3, 4], "issu": [0, 1, 2], "its": [3, 5], "jack": [3, 4], "kei": 5, "king": [3, 4], "known": 1, "latest": 2, "librari": [1, 6], "like": 5, "line": 1, "link": 0, "lint": [0, 6], "linter": [1, 5], "local": 1, "m": [1, 7], "mai": 2, "maintain": [1, 2], "make": [1, 5], "makefil": 1, "manag": 3, "manipul": 3, "match": 5, "mean": 2, "messag": 0, "method": 5, "modul": 4, "more": 6, "my": 0, "mypi": 6, "name": [0, 3, 5], "need": 3, "never": 0, "new": [0, 1, 2, 5], "nine": [3, 4], "non": 0, "none": 3, "number": 3, "object": [3, 5, 6], "off": 0, "onc": 0, "onli": [0, 2], "open": 6, "oper": 3, "orchestr": 1, "orient": 6, "our": [0, 1], "out": [0, 6], "over": 0, "packag": [4, 7], "pair": 3, "paramet": [4, 5], "parameter": 5, "part": [6, 7], "peopl": [0, 2], "pep008": 6, "pep257": 6, "pep484": 6, "pin": 2, "pip": 6, "pipenv": 6, "place": 0, "plai": 3, "pleas": 0, "poetri": 6, "point": 0, "practic": [1, 6], "program": 6, "project": [0, 1, 6], "proper": 5, "properli": 7, "properti": 3, "propos": [1, 6], "provid": [1, 3], "public": 7, "pull": 6, "put": 0, "py": [1, 3, 5], "pycodestyl": 6, "pydocstyl": 6, "pylint": 1, "pytest": [1, 5], "python": [1, 7], "python_file_nam": 1, "qualiti": [0, 6], "quality_check": 1, "qualnam": 3, "queen": [3, 4], "question": 0, "quickli": 2, "rais": [3, 5], "ran": 0, "rang": 3, "rank": [3, 4, 5], "re": 0, "reach": [0, 6], "read": 0, "rebuild": 1, "rebuilt": 0, "recommend": 1, "relat": [3, 5], "releas": 2, "replac": [0, 1], "report": 6, "repositori": [2, 7], "repres": 3, "represent": [3, 5], "request": 6, "requir": [0, 1, 2, 3], "return": 3, "robust": 5, "roll": 2, "ruff": 1, "run": [1, 7], "rust": 1, "satisfi": 5, "script": 1, "secur": [0, 1], "see": [0, 3, 5], "select": 0, "separ": 0, "set": [0, 5], "set_rank": 5, "set_suit": 5, "seven": [3, 4], "sh": 1, "shell": 1, "simpl": 7, "simpli": 7, "six": [3, 4], "softwar": 7, "sourc": [1, 6], "space": 0, "spade": [3, 4], "specif": 3, "standard": 3, "start": [3, 6], "static": 6, "stdin": 1, "step": [0, 7], "strategi": 6, "string": 5, "structur": 3, "style": [0, 1], "stylist": 1, "submodul": 4, "successfulli": 0, "suit": [3, 4, 5], "support": [0, 6], "system": 3, "t": 0, "tabl": 0, "take": 0, "ten": [3, 4], "termin": 7, "test": [4, 6], "test_card": 4, "test_card_initi": [4, 5], "test_del_rank": [4, 5], "test_del_suit": [4, 5], "test_get_rank": [4, 5], "test_get_suit": [4, 5], "test_invalid_card_initialization_rank": [4, 5], "test_invalid_card_initialization_suit": [4, 5], "test_set_rank_invalid": [4, 5], "test_set_rank_valid": [4, 5], "test_set_suite_invalid": [4, 5], "test_set_suite_valid": [4, 5], "thank": 0, "them": 1, "thestygianarchitect": 7, "thi": [1, 2, 3, 5, 6, 7], "three": [3, 4], "throughout": 1, "time": 0, "too": 1, "tool": 1, "toolset": 1, "two": [3, 4], "type": [3, 6], "typeerror": 3, "u": 2, "understand": 2, "unit": 0, "unsur": 0, "updat": [5, 6], "us": [1, 3, 5, 7], "usag": [3, 5], "user": 3, "uv": [1, 6], "valid": [1, 5], "valu": [3, 5], "valueerror": 3, "verif": 5, "verifi": 0, "via": 6, "virtual": 1, "vulner": [0, 6], "want": 6, "we": [0, 1, 2], "welcom": 0, "well": 5, "were": 0, "what": 0, "when": [1, 5], "where": 7, "which": 0, "while": 2, "who": 0, "within": 3, "work": [0, 3], "workforc": 2, "would": [0, 1], "write": 6, "written": 1, "x": 0, "you": [0, 3, 7], "your": [0, 1, 7]}, "titles": ["Contributing to Deck of Cards", "Code Quality", "Support", "card_deck package", "card_deck", "tests package", "Deck of Cards documentation", "Installation of Deck of Cards"], "titleterms": {"The": 6, "all": [0, 1], "analysi": 1, "api": 6, "appropri": 0, "audit": 1, "autom": 1, "bandit": 1, "been": 0, "bug": 0, "build": 1, "card": [0, 3, 6, 7], "card_deck": [3, 4], "chang": 0, "check": 1, "checklist": 0, "code": [1, 7], "commun": 6, "content": [3, 5], "contribut": 0, "deck": [0, 6, 7], "depend": 1, "document": [0, 1, 6], "except": 3, "featur": 0, "get": 7, "guid": 6, "ha": 0, "hint": 1, "how": 0, "instal": 7, "librari": 2, "lint": 1, "modul": [3, 5], "mypi": 1, "open": 0, "other": 0, "out": 2, "packag": [3, 5], "pep008": 1, "pep257": 1, "pep484": 1, "pip": [1, 7], "pipenv": 7, "poetri": 7, "propos": 0, "pull": 0, "pycodestyl": 1, "pydocstyl": 1, "qualiti": 1, "reach": 2, "report": 0, "request": 0, "screenshot": 0, "sourc": 7, "static": 1, "strategi": 2, "submodul": [3, 5], "support": 2, "test": [0, 1, 5], "test_card": 5, "thi": 0, "type": [0, 1], "updat": 0, "user": 6, "uv": 7, "via": 7, "vulner": 1}})